@page "/paymentcuongclas/PaymentCuongClaList"
@inject zEVRental.Services.CuongCLA.IServiceProviders _serviceProviders
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<div class="container-fluid mt-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="text-primary mb-1">
                        <i class="fas fa-credit-card me-2"></i>
                        Payment Management
                    </h2>
                    <p class="text-muted mb-0">Manage all payment transactions</p>
                </div>
                <div>
                    <a href="/PaymentCuongClas/PaymentCuongClaForm" class="btn btn-primary btn-lg shadow-sm">
                        <i class="fas fa-plus me-2"></i>
                        Create New Payment
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    @if (paymentCuongClaLists != null && paymentCuongClaLists.Any())
    {
        <div class="row mb-4">
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="card bg-primary text-white h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Total Payments</h6>
                                <h3 class="mb-0">@paymentCuongClaLists.Count</h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-file-invoice-dollar fa-2x opacity-75"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="card bg-success text-white h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Total Amount</h6>
                                <h3 class="mb-0">$@paymentCuongClaLists.Sum(p => p.Amount).ToString("N2")</h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-dollar-sign fa-2x opacity-75"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="card bg-info text-white h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Completed</h6>
                                <h3 class="mb-0">@paymentCuongClaLists.Count(p => p.PaymentStatus == "Completed")</h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-check-circle fa-2x opacity-75"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-3">
                <div class="card bg-warning text-white h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Pending</h6>
                                <h3 class="mb-0">@paymentCuongClaLists.Count(p => p.PaymentStatus == "Pending")</h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-clock fa-2x opacity-75"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Search and Filter Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h6 class="card-title mb-3">
                        <i class="fas fa-search me-2"></i>Search & Filter
                    </h6>
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label class="form-label">Search by Customer/Booking</label>
                            <input type="text" @bind="searchTerm" @onkeyup="FilterPayments" class="form-control" placeholder="Enter customer name or booking ID..." />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Payment Status</label>
                            <select @bind="filterStatus" @onchange="FilterPayments" class="form-select">
                                <option value="">All Status</option>
                                <option value="Pending">Pending</option>
                                <option value="Completed">Completed</option>
                                <option value="Failed">Failed</option>
                                <option value="Cancelled">Cancelled</option>
                                <option value="Refunded">Refunded</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Payment Method</label>
                            <select @bind="filterMethod" @onchange="FilterPayments" class="form-select">
                                <option value="">All Methods</option>
                                <option value="Cash">Cash</option>
                                <option value="Credit Card">Credit Card</option>
                                <option value="Debit Card">Debit Card</option>
                                <option value="Bank Transfer">Bank Transfer</option>
                                <option value="Digital Wallet">Digital Wallet</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">&nbsp;</label>
                            <button type="button" @onclick="ClearFilters" class="btn btn-outline-secondary w-100">
                                <i class="fas fa-times me-1"></i>Clear
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    @if (isLoading)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary mb-3" style="width: 3rem; height: 3rem;" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <h4 class="text-muted">Loading payments...</h4>
            <p class="text-muted">Please wait while we fetch the data</p>
        </div>
    }
    else if (paymentCuongClaLists == null || !paymentCuongClaLists.Any())
    {
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="fas fa-credit-card fa-4x text-muted"></i>
            </div>
            <h4 class="text-muted">No Payments Found</h4>
            <p class="text-muted mb-4">There are no payment records to display.</p>
            <a href="/PaymentCuongClas/PaymentCuongClaForm" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>Create Your First Payment
            </a>
        </div>
    }
    else
    {
        <!-- Data Table -->
        <div class="card shadow-sm">
            <div class="card-header bg-white">
                <div class="d-flex justify-content-between align-items-center">
                    <h6 class="mb-0">
                        <i class="fas fa-list me-2"></i>
                        Payment List (@filteredPayments.Count() items)
                    </h6>
                    <div class="d-flex gap-2">
                        <button class="btn btn-outline-primary btn-sm" @onclick="RefreshData">
                            <i class="fas fa-sync-alt me-1"></i>Refresh
                        </button>
                        <button class="btn btn-outline-success btn-sm" @onclick="ExportData">
                            <i class="fas fa-download me-1"></i>Export
                        </button>
                    </div>
                </div>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="border-0">
                                    <i class="fas fa-hashtag me-1"></i>ID
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-calendar me-1"></i>Date
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-user me-1"></i>Customer/Booking
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-dollar-sign me-1"></i>Amount
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-credit-card me-1"></i>Method
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-info-circle me-1"></i>Status
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-shield-alt me-1"></i>Deposit
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-user-tie me-1"></i>Processed By
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-cogs me-1"></i>Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in filteredPayments)
                            {
                                <tr class="@(item.PaymentStatus == "Failed" ? "table-danger" : "")">
                                    <td class="align-middle">
                                        <span class="badge bg-secondary">#@item.PaymentCuongClaid</span>
                                    </td>
                                    <td class="align-middle">
                                        <small class="text-muted">@item.PaymentDate.ToString("MMM dd, yyyy")</small><br />
                                        <small class="text-muted">@item.PaymentDate.ToString("HH:mm")</small>
                                    </td>
                                    <td class="align-middle">
                                        <div>
                                            <strong>@(item.Booking?.Customer?.FullName ?? "N/A")</strong><br />
                                            <small class="text-muted">Booking #@item.BookingId</small>
                                        </div>
                                    </td>
                                    <td class="align-middle">
                                        <span class="h6 text-success mb-0">$@item.Amount.ToString("N2")</span>
                                        @if (item.DepositReturnAmount.HasValue)
                                        {
                                            <br /><small class="text-muted">Return: $@item.DepositReturnAmount.Value.ToString("N2")</small>
                                        }
                                    </td>
                                    <td class="align-middle">
                                        <span class="badge @GetPaymentMethodBadgeClass(item.PaymentMethod)">
                                            @GetPaymentMethodIcon(item.PaymentMethod) @item.PaymentMethod
                                        </span>
                                    </td>
                                    <td class="align-middle">
                                        <span class="badge @GetStatusBadgeClass(item.PaymentStatus)">
                                            @GetStatusIcon(item.PaymentStatus) @item.PaymentStatus
                                        </span>
                                    </td>
                                    <td class="align-middle text-center">
                                        @if (item.IsDeposit)
                                        {
                                            <i class="fas fa-check-circle text-success" title="Is Deposit"></i>
                                        }
                                        else
                                        {
                                            <i class="fas fa-times-circle text-muted" title="Not Deposit"></i>
                                        }
                                    </td>
                                    <td class="align-middle">
                                        <small class="text-muted">@(item.ProcessedByNavigation?.FullName ?? "System")</small>
                                    </td>
                                    <td class="align-middle">
                                        <div class="btn-group" role="group">
                                            <a href="/PaymentCuongClas/PaymentCuongClaForm/@item.PaymentCuongClaid" 
                                               class="btn btn-outline-primary btn-sm" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button type="button" class="btn btn-outline-info btn-sm" 
                                                    @onclick="() => ViewDetails(item)" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            <button type="button" class="btn btn-outline-danger btn-sm" 
                                                    @onclick="() => DeletePayment(item.PaymentCuongClaid)" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

<!-- Payment Details Modal -->
@if (selectedPayment != null)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-credit-card me-2"></i>
                        Payment Details - #@selectedPayment.PaymentCuongClaid
                    </h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h6>Payment Information</h6>
                            <table class="table table-borderless table-sm">
                                <tr>
                                    <td><strong>Payment ID:</strong></td>
                                    <td>#@selectedPayment.PaymentCuongClaid</td>
                                </tr>
                                <tr>
                                    <td><strong>Date:</strong></td>
                                    <td>@selectedPayment.PaymentDate.ToString("MMM dd, yyyy HH:mm")</td>
                                </tr>
                                <tr>
                                    <td><strong>Amount:</strong></td>
                                    <td class="text-success"><strong>$@selectedPayment.Amount.ToString("N2")</strong></td>
                                </tr>
                                <tr>
                                    <td><strong>Method:</strong></td>
                                    <td>@selectedPayment.PaymentMethod</td>
                                </tr>
                                <tr>
                                    <td><strong>Status:</strong></td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(selectedPayment.PaymentStatus)">
                                            @selectedPayment.PaymentStatus
                                        </span>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-6">
                            <h6>Booking Information</h6>
                            <table class="table table-borderless table-sm">
                                <tr>
                                    <td><strong>Booking ID:</strong></td>
                                    <td>#@selectedPayment.BookingId</td>
                                </tr>
                                <tr>
                                    <td><strong>Customer:</strong></td>
                                    <td>@(selectedPayment.Booking?.Customer?.FullName ?? "N/A")</td>
                                </tr>
                                <tr>
                                    <td><strong>Is Deposit:</strong></td>
                                    <td>@(selectedPayment.IsDeposit ? "Yes" : "No")</td>
                                </tr>
                                @if (selectedPayment.DepositReturnAmount.HasValue)
                                {
                                    <tr>
                                        <td><strong>Return Amount:</strong></td>
                                        <td class="text-info">$@selectedPayment.DepositReturnAmount.Value.ToString("N2")</td>
                                    </tr>
                                }
                                <tr>
                                    <td><strong>Processed By:</strong></td>
                                    <td>@(selectedPayment.ProcessedByNavigation?.FullName ?? "System")</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(selectedPayment.Notes))
                    {
                        <hr />
                        <h6>Notes</h6>
                        <p class="text-muted">@selectedPayment.Notes</p>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseModal">Close</button>
                    <a href="/PaymentCuongClas/PaymentCuongClaForm/@selectedPayment.PaymentCuongClaid" class="btn btn-primary">
                        <i class="fas fa-edit me-2"></i>Edit Payment
                    </a>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<PaymentCuongCla>? paymentCuongClaLists;
    private PaymentCuongCla? selectedPayment;
    private bool isLoading = true;
    private string searchTerm = string.Empty;
    private string filterStatus = string.Empty;
    private string filterMethod = string.Empty;

    private IEnumerable<PaymentCuongCla> filteredPayments => paymentCuongClaLists?.Where(p =>
        (string.IsNullOrEmpty(searchTerm) || 
         (p.Booking?.Customer?.FullName?.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ?? false) ||
         p.BookingId.ToString().Contains(searchTerm)) &&
        (string.IsNullOrEmpty(filterStatus) || p.PaymentStatus == filterStatus) &&
        (string.IsNullOrEmpty(filterMethod) || p.PaymentMethod == filterMethod)
    ) ?? Enumerable.Empty<PaymentCuongCla>();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        isLoading = true;
        try
        {
            paymentCuongClaLists = await _serviceProviders._IpaymentCuongClaService.GetAllAsync();
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error loading payments: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task RefreshData()
    {
        await LoadData();
        await JSRuntime.InvokeVoidAsync("alert", "Data refreshed successfully!");
    }

    private async Task FilterPayments()
    {
        await Task.Delay(100); // Small delay for better UX
        StateHasChanged();
    }

    private void ClearFilters()
    {
        searchTerm = string.Empty;
        filterStatus = string.Empty;
        filterMethod = string.Empty;
        StateHasChanged();
    }

    private void ViewDetails(PaymentCuongCla payment)
    {
        selectedPayment = payment;
        StateHasChanged();
    }

    private void CloseModal()
    {
        selectedPayment = null;
        StateHasChanged();
    }

    private async Task DeletePayment(int paymentId)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this payment?"))
        {
            try
            {
                var success = await _serviceProviders._IpaymentCuongClaService.DeleteAsync(paymentId);
                if (success)
                {
                    await JSRuntime.InvokeVoidAsync("alert", "Payment deleted successfully!");
                    await LoadData();
                }
                else
                {
                    await JSRuntime.InvokeVoidAsync("alert", "Failed to delete payment.");
                }
            }
            catch (Exception ex)
            {
                await JSRuntime.InvokeVoidAsync("alert", $"Error deleting payment: {ex.Message}");
            }
        }
    }

    private async Task ExportData()
    {
        await JSRuntime.InvokeVoidAsync("alert", "Export functionality will be implemented soon!");
    }

    private string GetStatusBadgeClass(string status) => status?.ToLower() switch
    {
        "completed" => "bg-success",
        "pending" => "bg-warning text-dark",
        "failed" => "bg-danger",
        "cancelled" => "bg-secondary",
        "refunded" => "bg-info",
        _ => "bg-light text-dark"
    };

    private string GetStatusIcon(string status) => status?.ToLower() switch
    {
        "completed" => "fas fa-check-circle",
        "pending" => "fas fa-clock",
        "failed" => "fas fa-times-circle",
        "cancelled" => "fas fa-ban",
        "refunded" => "fas fa-undo",
        _ => "fas fa-question-circle"
    };

    private string GetPaymentMethodBadgeClass(string method) => method?.ToLower() switch
    {
        "cash" => "bg-success",
        "credit card" or "debit card" => "bg-primary",
        "bank transfer" => "bg-info",
        "digital wallet" => "bg-warning text-dark",
        _ => "bg-secondary"
    };

    private string GetPaymentMethodIcon(string method) => method?.ToLower() switch
    {
        "cash" => "fas fa-money-bill",
        "credit card" or "debit card" => "fas fa-credit-card",
        "bank transfer" => "fas fa-university",
        "digital wallet" => "fas fa-mobile-alt",
        "check" => "fas fa-money-check",
        _ => "fas fa-credit-card"
    };
}
